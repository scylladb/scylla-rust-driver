[package]
name = "scylla-cql"
version = "0.3.0"
edition = "2021"
rust-version = "1.70"
description = "CQL data types and primitives, for interacting with Scylla."
repository = "https://github.com/scylladb/scylla-rust-driver"
readme = "../README.md"
keywords = ["database", "scylla", "cql", "cassandra"]
categories = ["database"]
license = "MIT OR Apache-2.0"

[dependencies]
scylla-macros = { version = "0.6.0", path = "../scylla-macros" }
byteorder = "1.3.4"
bytes = "1.0.1"
tokio = { version = "1.34", features = ["io-util", "time"] }
secrecy-08 = { package = "secrecy", version = "0.8", optional = true }
snap = "1.0"
uuid = "1.0"
thiserror = "1.0"
num-bigint-03 = { package = "num-bigint", version = "0.3", optional = true }
num-bigint-04 = { package = "num-bigint", version = "0.4", optional = true }
bigdecimal-04 = { package = "bigdecimal", version = "0.4", optional = true }
chrono-04 = { package = "chrono", version = "0.4.32", default-features = false, optional = true }
lz4_flex = { version = "0.11.1" }
async-trait = "0.1.57"
serde = { version = "1.0", features = ["derive"], optional = true }
time-03 = { package = "time", version = "0.3", optional = true }

[dev-dependencies]
assert_matches = "1.5.0"
criterion = "0.4"        # Note: v0.5 needs at least rust 1.70.0
lazy_static = "1"        # We can migrate to std::sync::LazyLock once MSRV is bumped to 1.80.
# Use large-dates feature to test potential edge cases
time-03 = { package = "time", version = "0.3.21", features = ["large-dates"] }
uuid = { version = "1.0", features = ["v4"] }

[[bench]]
name = "benchmark"
harness = false

[features]
secrecy-08 = ["dep:secrecy-08"]
time-03 = ["dep:time-03"]
chrono-04 = ["dep:chrono-04"]
num-bigint-03 = ["dep:num-bigint-03"]
num-bigint-04 = ["dep:num-bigint-04"]
bigdecimal-04 = ["dep:bigdecimal-04"]
full-serialization = [
    "chrono-04",
    "time-03",
    "secrecy-08",
    "num-bigint-03",
    "num-bigint-04",
    "bigdecimal-04",
]

[lints.rust]
unnameable_types = "warn"
unreachable_pub = "warn"
